C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE DrvSysCtrl
OBJECT MODULE PLACED IN ..\output\obj\DrvSysCtrl.obj
COMPILER INVOKED BY: D:\software\Keil\C251\BIN\C251.EXE ..\..\src\source\driver\DrvSysCtrl.c SMALL ROM(HUGE) OPTIMIZE(9,
                    -SPEED) REGFILE(..\output\obj\mcu.ORC) BROWSE INCDIR(..\..\src\include;..\..\src\include\app;..\..\src\include\flow;..\..
                    -\src\include\driver\;..\..\src\include\lib_drv\;..\..\src\include\config;..\..\src\include\Debug) DEFINE(__FT8836__) DEB
                    -UG PRINT(..\output\list\DrvSysCtrl.lst) TABS(2) OBJECT(..\output\obj\DrvSysCtrl.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: CommHost.c
    5          *
    6          *    Author: Wu Bo Zhong (Michael)
    7          *
    8          *   Created: 2013-01-01
    9          *
   10          *  Abstract: Just provide an interface for high layer of flow to initialize
   11          *            the module communicats with host.
   12          *
   13          * Reference:
   14          *
   15          *******************************************************************************/
   16          
   17          /*******************************************************************************
   18          * Included header files
   19          *******************************************************************************/
   20          #include <intrins.h>
   21          //#include "FT8836.h"
   22          #include "DrvSysCtrl.h"
   23          #include "FT8836_Reg.h"
   24          #include "FlowFactory.h"
   25          
   26          #if 1
   27          /*******************************************************************************
   28          * Private constant and macro definitions using #define
   29          *******************************************************************************/
   30          #if _PRAM_UPGRADE_EN
               /* upgrade flag */
               #define UPGRADE_FLAGA           0x66
               #define UPGRADE_FLAGB           0xbb
               #endif
   35          #define RTC_MS        32
   36          #define RTC_N_MS     (RTC_MS*14)
   37          /*******************************************************************************
   38          * Private enumerations, structures and unions using typedef
   39          *******************************************************************************/
   40          
   41          
   42          /*******************************************************************************
   43          * Static variables
   44          *******************************************************************************/
   45          
   46          /*******************************************************************************
   47          * Global variable or extern global variabls/functions
   48          *******************************************************************************/
   49          UINT8 XRAM g_ucSysClk = 0;              /* 系统时钟，ms加一次 */
   50          UINT8 XRAM g_ucFramTime = 100;          /* 一帧的工作时间 */
   51          UINT8 XRAM g_ucFramCnt  = 0;            /* monitor-->active,后的帧计数 */
   52          BOOLEAN g_bRtcTimeFlg = FALSE;          /* RTC 计时到标志 */
   53          
   54          /* Test */
   55          UINT8  XRAM g_ucINT0src  = 0;
   56          
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 2   

   57          /*******************************************************************************
   58          * Static function prototypes
   59          *******************************************************************************/
   60          
   61          /*******************************************************************************
   62          *   Name: DrvSysClkInit
   63          *  Brief: Initialize system clock based on ucflag
   64          *  Input: UINT8 ucflag
   65          * Output: None
   66          * Return: None
   67          *******************************************************************************/
   68          void DrvSysClkInit(UINT8 ucDiv)
   69          {
   70   1          if (ucDiv < 8)
   71   1          {
   72   2              /* main clk = 48M/(div+1) */     
   73   2              CGUCON4 =  ucDiv;
   74   2          }    
   75   1      
   76   1          //OSC48M_EN = 1;     //该寄存器已删
   77   1          SYSCKEN = 1;
   78   1       
   79   1          /*WDT,CNT,TIMER会用到*/
   80   1          CLKEN_500K = 1; 
   81   1          WDT_500K_EN = 1;
   82   1      }
   83          
   84          /*******************************************************************************
   85          *   Name: DrvSysPowerMode
   86          *  Brief: Select system power saving mode
   87          *  Input: None
   88          * Output: None
   89          * Return: None
   90          *******************************************************************************/
   91          void DrvSysPwrSel(UINT8 pmode)
   92          {    
   93   1          /* IDLE mode */
   94   1          if (pmode == 0)
   95   1          {
   96   2              CORE_IDLE = 1;
   97   2              EA = 1;
   98   2          }
   99   1          
  100   1          /* Stop mode */
  101   1          if (pmode == 1)
  102   1          {
  103   2              CLK_WP = 1;
  104   2              STANDBY = 0;
  105   2              CORE_STOP = 1;
  106   2              EA = 1;
  107   2          }
  108   1          
  109   1          /* Standby mode */
  110   1          if (pmode == 2)
  111   1          {            
  112   2              CLK_WP = 1;
  113   2              STANDBY = 1;
  114   2              CORE_STOP = 1;
  115   2              EA = 1;
  116   2          }
  117   1          _nop_();
  118   1          _nop_();
  119   1          _nop_();
  120   1          _nop_();        
  121   1      }
  122          
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 3   

  123          /*******************************************************************************
  124          *   Name: DrvSysPortInit
  125          *  Brief: Initialize system GPIO Port
  126          *  Input: None
  127          * Output: None
  128          * Return: None
  129          *******************************************************************************/
  130          void DrvSysPortInit(void)
  131          {
  132   1      
  133   1      #if 0
                   P0MOD &= 0x7F;
                   P0DIR &= 0x7F;
                   P0SEL |= 0x80;
                   P0DIR |= BITn(6);
                   P0SEL |= BITn(6); 
               #else
  140   1          P0MOD = 0x00;
  141   1          P0DIR = 0xFF;
  142   1          P0SEL = 0xFF;
  143   1          P1MOD = 0x00;
  144   1          P1DIR = 0xFF;
  145   1          P1SEL = 0xFF;
  146   1      #endif
  147   1      }
  148          
  149          #if _PRAM_UPGRADE_EN
               /*******************************************************************************
               *   Name: DrvGoToUpgrade
               *  Brief: Wirte Upgarade Flag into RST_STA,then software reset to upgrade firware
               *  Input: None
               * Output: None
               * Return: None
               *******************************************************************************/
               void DrvGoToUpgrade(void)
               {
                   RST_STA = RST_VALUE_UPGRADE;
                   SFTRST  = 0xff;
               }
               
               #endif //_PRAM_UPGRADE_EN
  164          
  165          /*******************************************************************************
  166          *   Name: DrvSwReset
  167          *  Brief: Software reset.
  168          *  Input: None
  169          * Output: None
  170          * Return: None
  171          *******************************************************************************/
  172          void DrvSwReset(void)
  173          {
  174   1          SFTRST  = 0xff;
  175   1      }
  176          
  177          #if _DELAY_MS_EN
  178          /*******************************************************************************
  179          *   Name: DelayUs
  180          *  Brief: delay some us, internal NOP number varies related with main clock
  181          *  1.不同主频不一样，如果时间要求严，需要示波器测试
  182          *  Input: UINT8 ucDlyCnt => maximum delay is 255 us
  183          * Output: None
  184          * Return: None
  185          *******************************************************************************/
  186          void DelayUs(UINT8 ucDlyCnt)
  187          {
  188   1      #if !_BLK_DBG_EN
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 4   

                   return;
               #endif
  191   1      
  192   1          while (ucDlyCnt--)
  193   1          {
  194   2          #if _COMPILE_PLATFORM == PLATFORM_251
  195   2              _nop_();
  196   2              _nop_();
  197   2              _nop_();
  198   2              _nop_();
  199   2      
  200   2              _nop_();
  201   2              _nop_();
  202   2              _nop_();
  203   2              _nop_();
  204   2      
  205   2              _nop_();
  206   2              _nop_();
  207   2              _nop_();
  208   2              _nop_(); 
  209   2      
  210   2              _nop_();
  211   2              _nop_();
  212   2              _nop_();        
  213   2          #endif
  214   2          }
  215   1      }
  216          
  217          /*******************************************************************************
  218          *   Name: DelayUs
  219          *  Brief: delay some ms
  220          *  Input: UINT8 ucDlyCnt => maximum delay is 255 ms
  221          * Output: None
  222          * Return: None
  223          *******************************************************************************/
  224          void DelayMs(UINT16 ucDlyCnt)
  225          {
  226   1          while (ucDlyCnt--)
  227   1          {
  228   2              DelayUs(250);
  229   2              DelayUs(250);
  230   2              DelayUs(250);
  231   2              DelayUs(250);
  232   2          }
  233   1      }
  234          #endif
  235          
  236          /*******************************************************************************
  237          *   Name: DrvIntPriority
  238          *  Brief: Config priority of interrupts
  239          *  Input: None
  240          * Output: None
  241          * Return: None
  242          *******************************************************************************/
  243          void DrvIntPriority(void)
  244          {
  245   1      
  246   1          //优先级--先清0
  247   1          IPH0 = 0x00;
  248   1          IPL0 = 0x00;
  249   1          AIPH = 0x00;
  250   1          AIPL = 0x00;     
  251   1      
  252   1          /* Int0优先级设置为3---唤醒要求 */ 
  253   1          IPHX0 = 1;
  254   1          IPLX0 = 1; 
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 5   

  255   1      
  256   1          /* 通信优先 设置为2 */    
  257   1          I2C_IPH = 0;
  258   1          I2C_IPL = 1; 
  259   1      
  260   1          I2C_STOP_IPH = 1;
  261   1          I2C_STOP_IPL = 0;      
  262   1      
  263   1          // Time0优先级设置为2---incell方案时需要考虑
  264   1          IPHT0 = 0;
  265   1          IPLT0 = 1;  
  266   1      
  267   1          ET2 = 1;
  268   1      
  269   1      #if _BLK_DBG_EN    
  270   1          // uart优先级设置为2--低优先级中断中不能使用串口
  271   1          Uart_IPH = 1;
  272   1          Uart_IPL = 1; 
  273   1      #else
                   Uart_IPH = 0;
                   Uart_IPL = 0;
               #endif
  277   1      }
  278          
  279          
  280          void Drv_Rtc_Init(UINT8 ucMode)
  281          {
  282   1          // 32K时钟使能
  283   1          
  284   1          CLK_WP = 1;
  285   1          EN_32K = 1;
  286   1          RTC_32K_EN = 1;
  287   1        
  288   1          // rtc clk enable
  289   1          RTCCKEN = 1;
  290   1          
  291   1          // clear rtc
  292   1          RTC_WP  = 1;
  293   1          RTC_CLR = 1;
  294   1      
  295   1          // 设置RTC计数时间
  296   1          RTCIVH  = RTC_N_MS/256;
  297   1          RTCIVL  = RTC_N_MS%256;
  298   1      
  299   1          if(ucMode == 0)
  300   1          {
  301   2              RTC_AUTO_MODE = 1;
  302   2              LCD_START_EN = 0;
  303   2          }
  304   1          else
  305   1          {
  306   2              RTC_AUTO_MODE = 0;
  307   2              LCD_SRC_SEL_H = 0;//vstart
  308   2              LCD_SRC_SEL_L = 0;
  309   2          }
  310   1          
  311   1          
  312   1          //RTC中断作为中断0
  313   1          RTC_INT_EN_ASM = 1;      // select rtc
  314   1          RTC_INT_EN_CPU = 1;
  315   1          
  316   1          //int1 init
  317   1          IT1 = 0;   // 0:LOW level triggered 1:falling edge
  318   1      
  319   1          IPHX1 = 1;
  320   1          IPLX1 = 1;    
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 6   

  321   1          EX1 = 1;
  322   1        
  323   1      #if 0
                   Uart_IPL = 0;
                   Uart_IPH = 0;
               #endif
  327   1      
  328   1          EA = 1;    
  329   1      }
  330          
  331          
  332          
  333          /*******************************************************************************
  334          *   Name: Exint0_IRQHandler()
  335          *  Brief:
  336          *  Input:
  337          * Output:
  338          * Return:
  339          *******************************************************************************/
  340          void Exint0_IRQHandler(void) interrupt 0
  341          {
  342   1          g_ucState0 = IWKSTA;
  343   1      
  344   1          if (ASM_MON_WKEN)
  345   1          {
  346   2              if (ASM_MON_INT)
  347   2              {
  348   3                  DBG_INT("\nASM WKEN");
  349   3                  g_ucState0 = IWKSTA;
  350   3                  ASM_MON_WKEN = 0;
  351   3              }
  352   2          }
  353   1      
  354   1          if (LCD_RELOAD_FLASH_WKEN)
  355   1          {
  356   2              if (LCD_RELOAD_FLASH)
  357   2              {
  358   3                  g_ucState0 = IWKSTA;
  359   3                  LCD_RELOAD_FLASH_WKEN = 0;
  360   3              }
  361   2          }
  362   1      
  363   1          if (RTC_CNT_WKEN)
  364   1          {
  365   2              if (RTC_CNT_INT)
  366   2              {
  367   3                  RTC_CNT_WKEN = 0;
  368   3              }
  369   2          }
  370   1      
  371   1          if (I2C_MON_WKEN)
  372   1          {
  373   2              if (I2C_MON_INT)
  374   2              {
  375   3                  I2C_MON_WKEN = 0;
  376   3              }
  377   2          }
  378   1          if (LCD_ESD_WKEN)
  379   1          {
  380   2              if (LCD_ESD_WK_INT)
  381   2              {
  382   3                 
  383   3      //            LCD_ESD_WKEN = 0;
  384   3                  g_ucAbnormalFlag |= 0x01;
  385   3                  
  386   3                  //DBG_FLOW("\nESD %d",LCD_ESD_PHASE);//该寄存器已删除
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 7   

  387   3                  //LCD_ESD_PHASE =~LCD_ESD_PHASE;     //该寄存器已删除
  388   3                  
  389   3              }
  390   2          }
  391   1          if (LCD_LVD_WKEN)
  392   1          {
  393   2              if (LCD_LVD_WK_INT)
  394   2              {
  395   3                  //LCD_LVD_WKEN = 0;
  396   3                  g_ucAbnormalFlag |= 0x02;
  397   3                  
  398   3                  //DBG_FLOW("\nLVD %d",LCD_LVD_PHASE);  //该寄存器已删除
  399   3                  //LCD_LVD_PHASE =~LCD_LVD_PHASE;     //该寄存器已删除
  400   3              }
  401   2          }
  402   1      
  403   1          if (LCD_TIM_WKEN)
  404   1          {
  405   2              if (LCD_GPIO_WK_INT)
  406   2              {
  407   3                  LCD_TIM_WKEN = 0;
  408   3                  DBG_FLOW("\nLCD TIM");
  409   3              }
  410   2          }
  411   1          DBG_FLOW("\nint0:%x",IWKSTA);
  412   1      }
  413          
  414          /*******************************************************************************
  415          *   Name:
  416          *  Brief:
  417          *  Input:
  418          * Output:
  419          * Return: INT1中断响应函数
  420          *******************************************************************************/
  421          void Exint1_IRQHandler(void) interrupt 2
  422          {
  423   1          while(RTC_START_STA == 0);
  424   1          //清rtc
  425   1          RTC_WP  = 1;
  426   1          RTC_CLR = 1;
  427   1          //RTC_START = 1;
  428   1      
  429   1          DBG_FLOW("\nint1");
  430   1      }
  431          #endif
  432          
  433          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        10     ------
  ecode size           =       495     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         4     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
C251 COMPILER V5.54.0.0,  DrvSysCtrl                                                       26/05/17  20:21:06  PAGE 8   

End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
