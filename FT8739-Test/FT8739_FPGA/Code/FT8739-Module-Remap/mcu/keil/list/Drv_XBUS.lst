C251 COMPILER V5.54.0.0,  Drv_XBUS                                                         14/04/17  16:04:05  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Drv_XBUS
OBJECT MODULE PLACED IN .\obj\Drv_XBUS.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\driver\Drv_XBUS.c XSMALL ROM(HUGE) O
                    -PTIMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task) S
                    -TRING(FAR) DEBUG PRINT(.\list\Drv_XBUS.lst) TABS(2) OBJECT(.\obj\Drv_XBUS.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2014, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: Drv_XBUS.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2014-05-14
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          *   Version:
   15          *
   16          *******************************************************************************/
   17          #include "Drv_XBUS.h"
   18          #include "FT8836_Reg.h"
   19          
   20          /*******************************************************************************
   21          * 1.Included header files
   22          *******************************************************************************/
   23          #define WRITERREAD  1
   24          #define READONLY    0
   25          /* lcd wrap base addr */
   26          #define LCD_WRAP_START_ADDR     0xBC00
   27          //对lcd reg操作，小心操作
   28          #define LCD_REG_BASE_ADDR      0x020000
   29          #define Xbus_ADDR8(n)    (*((UINT8 far *)(LCD_REG_BASE_ADDR + n)))
   30          #define Xbus_ADDR16(n)   (*((UINT16 far *)(LCD_REG_BASE_ADDR + n)))
   31          /*******************************************************************************
   32          * 2.Private constant and macro definitions using #define
   33          *******************************************************************************/
   34          
   35          /*******************************************************************************
   36          * 3.Private enumerations, structures and unions using typedef
   37          *******************************************************************************/
   38          ST_LcdWrapRegisters *XRAM pLcdWrapRegs = (volatile ST_LcdWrapRegisters *)0xBC00;//XBUS_REG_BASE_ADDR;
   39          //ST_RlDmaRegisters *XRAM pRlDmaRegs = (volatile ST_RlDmaRegisters *)0x9D00;//RELOAD_DMA_START_ADDR;
   40          /*******************************************************************************
   41          * 4.Static variables
   42          *******************************************************************************/
   43          
   44          /*******************************************************************************
   45          * 5.Global variable or extern global variabls/functions
   46          *******************************************************************************/
   47          
   48          /*******************************************************************************
   49          * 6.Static function prototypes
   50          *******************************************************************************/
   51          
   52          /*******************************************************************************
   53          *   Name: Drv_XbusInit
   54          *  Brief:
   55          *  Input:
   56          * Output:
   57          * Return:
C251 COMPILER V5.54.0.0,  Drv_XBUS                                                         14/04/17  16:04:05  PAGE 2   

   58          *******************************************************************************/
   59          void Drv_XbusInit()
   60          {
   61   1      //    XBUSCKEN = 1;//不确定有没有
   62   1      }
   63          
   64          
   65          /******************************************************************************
   66          *
   67          *   Name: DrvXbus_ReadLcd16
   68          *  Brief: 读lcd数据 16位(双字节对齐)
   69          *  Input:
   70          * Output:
   71          * Return:
   72          *******************************************************************************/
   73          UINT16 DrvXbus_ReadLcd16(UINT16 usaddr)
   74          {
   75   1          volatile UINT8 Dummy;
   76   1          while(((pLcdWrapRegs->lcd_regfile_ctrl) & (BITn(1))) == 0);   //wait wr enable
   77   1          Dummy = Xbus_ADDR8(usaddr);     
   78   1          while(((pLcdWrapRegs->lcd_regfile_ctrl) & (BITn(0))) == 0);   //wait rdata redy
   79   1          return (UINT16)((pLcdWrapRegs->rdata_lo_byte << 8) + (pLcdWrapRegs->rdata_ho_byte & 0x00ff)); //Big-e
             -ndian
   80   1      }
   81          
   82          
   83          /******************************************************************************
   84          *
   85          *   Name: DrvXbus_WriteLcd8
   86          *  Brief:写lcd数据 8位
   87          *  Input:
   88          * Output:
   89          * Return:
   90          *******************************************************************************/
   91          void DrvXbus_WriteLcd8(UINT16 usaddr,UINT8 usdata)
   92          {
   93   1          while(((pLcdWrapRegs->lcd_regfile_ctrl) & (BITn(1))) == 0); //wait wr enable
   94   1          Xbus_ADDR8(usaddr) = usdata;
   95   1      //    while(((pLcdWrapRegs->lcd_regfile_ctrl) & (BITn(1))) == 0); //wait wr enable
   96   1      }
   97          
   98          
   99          #if 0//_TEST_XBUS_EN
               /*******************************************************************************
               *   Name: Test_Xbus()
               *  Brief:
               *  Input:
               * Output:
               * Return:
               *******************************************************************************/
               void Test_Xbus()
               {
               
               }
               #endif
  112          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =        78     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
C251 COMPILER V5.54.0.0,  Drv_XBUS                                                         14/04/17  16:04:05  PAGE 3   

  edata size           =         4          1
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         8     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
