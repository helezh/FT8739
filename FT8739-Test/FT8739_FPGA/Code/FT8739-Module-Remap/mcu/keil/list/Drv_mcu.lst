C251 COMPILER V5.54.0.0,  Drv_mcu                                                          14/04/17  16:04:05  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Drv_mcu
OBJECT MODULE PLACED IN .\obj\Drv_mcu.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\driver\Drv_mcu.c XSMALL ROM(HUGE) OP
                    -TIMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task) ST
                    -RING(FAR) DEBUG PRINT(.\list\Drv_mcu.lst) TABS(2) OBJECT(.\obj\Drv_mcu.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)£¬All Rights Reserved.
    3          *
    4          * File Name: Drv_mcu.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2014-04-24
    9          *
   10          *  Abstract:
   11          *
   12          * Reference: Transplant from FT5412 by linjianjun
   13          *
   14          *   Version: 0.2
   15          *
   16          *******************************************************************************/
   17          
   18          /*******************************************************************************
   19          * 1.Included header files
   20          *******************************************************************************/
   21          #include <intrins.h>
   22          #include "Drv_mcu.h"
   23          
   24          /*******************************************************************************
   25          * 2.Private constant and macro definitions using #define
   26          *******************************************************************************/
   27          
   28          /*******************************************************************************
   29          * 3.Private enumerations, structures and unions using typedef
   30          *******************************************************************************/
   31          
   32          /*******************************************************************************
   33          * 4.Static variables
   34          *******************************************************************************/
   35          
   36          /*******************************************************************************
   37          * 5.Global variable or extern global variabls/functions
   38          *******************************************************************************/
   39          UINT8 XRAM g_ucbuf[16];
   40          
   41          /*******************************************************************************
   42          * 6.Static function prototypes
   43          *******************************************************************************/
   44          
   45          /*******************************************************************************
   46          *   Name: DrvSysClkInit
   47          *  Brief: Initialize system clock based on ucflag
   48          *  Input: UINT8 ucflag
   49          * Output: None
   50          * Return: None
   51          *******************************************************************************/
   52          void DrvSysClkInit(UINT8 ucDiv)
   53          {
   54   1          if (ucDiv < 4)
   55   1          {
   56   2              CGUCON4 = ucDiv;
   57   2          }
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          14/04/17  16:04:05  PAGE 2   

   58   1              
   59   1          CLKEN_500K = 1;      // 500kÊ±ÖÓ¿ªÆô 
   60   1      }
   61          
   62          /*******************************************************************************
   63          *   Name: DrvIOInit
   64          *  Brief:
   65          *  Input:
   66          * Output: None
   67          * Return: None
   68          *******************************************************************************/
   69          void DrvIOInit(void)
   70          {
   71   1          g_ucbuf[0]  = CGUCON0;
   72   1          g_ucbuf[1]  = CGUCON1;
   73   1          g_ucbuf[2]  = CGUCON2;
   74   1          g_ucbuf[3]  = CGUCON3;
   75   1          g_ucbuf[4]  = CGUCON4;
   76   1          g_ucbuf[5]  = CGUCON5;
   77   1          g_ucbuf[6]  = CGUCON6;
   78   1          g_ucbuf[8]  = SFTRST;
   79   1          g_ucbuf[9]  = POR_STA;
   80   1          g_ucbuf[10] = RST_STA;
   81   1          g_ucbuf[11] = ANACON;
   82   1      
   83   1          POR_STA = 0x00;
   84   1          RST_STA = 0x66;
   85   1      
   86   1          SYSCKEN = 1;
   87   1          P0SEL = 0xff;
   88   1          P1SEL = 0xff;
   89   1          
   90   1          P1MOD = 0x00;
   91   1          
   92   1          P0MOD = BITn(1) + BITn(0);      //P0_0 SCL;P0_1 SDA
   93   1      
   94   1          P0DIR = 0xff;
   95   1          P1DIR = 0xff;
   96   1      
   97   1      
   98   1      }
   99          
  100          /*******************************************************************************
  101          *   Name: DelayUs
  102          *  Brief:
  103          *  Input:
  104          * Output: None
  105          * Return: None
  106          *******************************************************************************/
  107          void DelayUs(UINT8 ucDlyCnt)
  108          {
  109   1          while (ucDlyCnt--)
  110   1          {
  111   2              _nop_();
  112   2              _nop_();
  113   2              _nop_();
  114   2              _nop_();
  115   2      
  116   2              _nop_();
  117   2              _nop_();
  118   2              _nop_();
  119   2              _nop_();
  120   2      
  121   2              _nop_();
  122   2              _nop_();
  123   2              _nop_();
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          14/04/17  16:04:05  PAGE 3   

  124   2              _nop_();
  125   2      
  126   2              _nop_();
  127   2              _nop_();
  128   2      
  129   2              _nop_();
  130   2              _nop_();
  131   2              _nop_();
  132   2              _nop_();
  133   2      
  134   2              _nop_();
  135   2              _nop_(); 
  136   2              _nop_();
  137   2              _nop_();
  138   2              
  139   2              _nop_();
  140   2              _nop_();
  141   2              _nop_();
  142   2              _nop_();
  143   2      
  144   2              _nop_();
  145   2              _nop_();
  146   2              _nop_();
  147   2              _nop_();
  148   2      
  149   2              _nop_();
  150   2              _nop_();         
  151   2              _nop_();
  152   2              _nop_(); 
  153   2              
  154   2            
  155   2          }
  156   1      }
  157          
  158          /*******************************************************************************
  159          *   Name: DelayMs
  160          *  Brief:
  161          *  Input:
  162          * Output: None
  163          * Return: None
  164          *******************************************************************************/
  165          void DelayMs(UINT16 ucDlyCnt)
  166          {
  167   1          while (ucDlyCnt--)
  168   1          {
  169   2              DelayUs(250);
  170   2              DelayUs(250);
  171   2              DelayUs(250);
  172   2              DelayUs(250);
  173   2          }
  174   1      }
  175          
  176          /*******************************************************************************
  177          *   Name: DrvSysPowerMode
  178          *  Brief: Select system power saving mode
  179          *  Input: None
  180          * Output: None
  181          * Return: None
  182          *******************************************************************************/
  183          void DrvSysPowerMode(UINT8 pmode)
  184          {
  185   1          /* IDLE mode */
  186   1          if (pmode == 0)
  187   1          {  
  188   2              CORE_STOP = 0;
  189   2              CORE_IDLE = 1;
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          14/04/17  16:04:05  PAGE 4   

  190   2              EA = 1;
  191   2          }
  192   1          /* Stop mode */
  193   1          if (pmode == 1)
  194   1          {
  195   2              CLK_WP = 1;
  196   2              STANDBY = 0;
  197   2              CORE_STOP = 1;
  198   2              EA = 1;
  199   2          }
  200   1      
  201   1          /* Standby mode */
  202   1          if (pmode == 2)
  203   1          {
  204   2              CLK_WP = 1;
  205   2              STANDBY = 1;
  206   2              CORE_STOP = 1;
  207   2              EA = 1;
  208   2          }
  209   1      
  210   1          _nop_();
  211   1          _nop_();
  212   1          _nop_();
  213   1          _nop_();
  214   1      }
  215          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       225     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        16     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
