C251 COMPILER V5.54.0.0,  main                                                             14/04/17  16:04:00  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\main.c XSMALL ROM(HUGE) OPTIMIZE(9,S
                    -PEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task) STRING(FAR) 
                    -DEBUG PRINT(.\list\main.lst) TABS(2) OBJECT(.\obj\main.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: main.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2013-11-11
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          * Version: 0.2: Transplant from FT5422 by linjianjun
   15          *******************************************************************************/
   16          
   17          /*******************************************************************************
   18          * 1.Included header files
   19          *******************************************************************************/
   20          #include <intrins.h>
   21          #include "CfgGlobal.h"
   22          
   23          /*******************************************************************************
   24          * 2.Private constant and macro definitions using #define
   25          *******************************************************************************/
   26          
   27          #define APP_INFO_ADDR             0xFEE900  // Verification Info
   28          #define APP_VERIF_LEN             0x20
   29          
   30          #define FW_CFG_TOTAL_SIZE         0x80
   31          
   32          /*******************************************************************************
   33          * 3.Private enumerations, structures and unions using typedef
   34          *******************************************************************************/
   35          
   36          /*******************************************************************************
   37          * 4.Static variables
   38          *******************************************************************************/
   39          //UINT8 XRAM g_ucTestStack;      // system pram address stack test
   40          //UINT8 CROM g_ucTest[40000];    // use to add the code size to 64K
   41          /*******************************************************************************
   42          * 5.Global variable or extern global variabls/functions
   43          *******************************************************************************/
   44          void CRCCCITT(const UINT8* pDataIn, UINT16 iLenIn, UINT16* pCRCOut);
   45          
   46          /* 预留给校验码信息的代码区 */
   47          UINT8 ECODE g_aucVerfication[APP_VERIF_LEN+FW_CFG_TOTAL_SIZE] _at_ APP_INFO_ADDR;
   48          /*******************************************************************************
   49          * 6.Static function prototypes
   50          *******************************************************************************/
   51          
   52          /*******************************************************************************
   53          *   Name: init_mcu
   54          *  Brief:
   55          *  Input:
   56          * Output:
   57          * Return:
C251 COMPILER V5.54.0.0,  main                                                             14/04/17  16:04:00  PAGE 2   

   58          *******************************************************************************/
   59          void init_mcu(void)
   60          {
   61   1          UINT8 i;    
   62   1          I2CRI  = 0;
   63   1          I2CTI  = 0;
   64   1          I2CSTP = 0;
   65   1          I2CBUF = 0;
   66   1      
   67   1      #if _TEST_SFR_EN
                   for (i = 0x80; i < 0xff; i++)
                   {
                     g_ucSFR[i]   = SFRGetRegMapDataNormal(i);
                   }
                   
                   g_ucSFR[0xFF] = SFRGetRegMapDataNormal(0xFF);
                   g_ucSFR[0xC0] = SFRGetRegMapDataNormal(0xC0);
                   P1MOD = 0x00;
                   P1DIR = 0xFF;
                   P1SEL = 0xFF;
                   g_ucSFR[0x94] = SFRGetRegMapDataNormal(0x94);
               #endif
   80   1          DrvSysClkInit(MAIN_CLK);
   81   1          DrvIOInit();
   82   1          DrvUartInit();
   83   1          EA = 1;
   84   1         
   85   1          DBG_FLOW("\n\rModule test:");
   86   1          DBG_FLOW(__DATE__);
   87   1          for (i = 0; i < 8; i++)
   88   1          {
   89   2              DBG_FLOW("\n\rCGU%x: %x", i, g_ucbuf[i]);
   90   2          }
   91   1          DBG_FLOW("\n\rSOFT_RST: %x", g_ucbuf[8]);
   92   1          DBG_FLOW("\n\rPOR_STA: %x", g_ucbuf[9]);
   93   1          DBG_FLOW("\n\rRST_STA: %x", g_ucbuf[10]);
   94   1          DBG_FLOW("\n\rANACON:%x", g_ucbuf[11]);
   95   1          DBG_FLOW("\n\rIWKSTA:%02x",IWKSTA);
   96   1          DBG_FLOW("\n\rPOR_STA:%02x",POR_STA);
   97   1          DBG_FLOW("\n\rCNT_MASK:%02x",CNT_MASK);
   98   1          DBG_FLOW("\n\rCNT_STA:%02x",CNT_STA);
   99   1          //DBG_FLOW("\n\rPORRST_CNT:%02x",PORRST_CNT);   //0xF1 change to CNT_MASK
  100   1          //DBG_FLOW("\n\rWDTRST_CNT:%02x",WDTRST_CNT);   //0xF2 change to CNT_STA 
  101   1          //DBG_FLOW("\n\rEXTRST_CNT:%02x",EXTRST_CNT);   //0xF3 cancel
  102   1          //DBG_FLOW("\n\rLEDRST_CNT:%02x",LCDRST_CNT);   //0xF4 cancel
  103   1          DBG_FLOW("\n\rinit ok");
  104   1          //DelayMs(1000);
  105   1          P0_2 = 0;
  106   1      }
  107          
  108          /*******************************************************************************
  109          *   Name: main
  110          *  Brief:
  111          *  Input:
  112          * Output:
  113          * Return:
  114          *******************************************************************************/
  115          void main(void)
  116          {
  117   1          unsigned char i=0;
  118   1      
  119   1       #if 0  
                   UINT8 buf[8]={0};
                   UINT16 crc=0;
                   for(i=0;i<8;i++)
                   {
C251 COMPILER V5.54.0.0,  main                                                             14/04/17  16:04:00  PAGE 3   

                       buf[i]=0xa7;
                   }
                   
                   CRCCCITT(buf,6,&crc);
                   HOLD;
               #endif
  130   1          
  131   1          init_mcu();
  132   1      
  133   1      
  134   1      #if 1 
  135   1          Test_UART();
  136   1          Test_SFR();
  137   1          Test_Dram();
  138   1          Test_Prom();
  139   1          Test_Aram();
  140   1          Test_SPI_Flash();
  141   1          Test_Spi0Reg();
  142   1          Test_XsiReg();
  143   1          Test_XbusReg();
  144   1          Test_AsmReg();
  145   1          Test_CalReg();
  146   1          Test_LcdReg();
  147   1          Test_AfeReg(); 
  148   1          Test_Afe_Ram();
  149   1          
  150   1      
  151   1          Test_LED();
  152   1          Test_I2C();
  153   1          
  154   1          Test_WDT();
  155   1          Test_RTC();
  156   1          Test_Counter();
  157   1          
  158   1          Test_Timer();    
  159   1          Test_GPIO();
  160   1          Test_I2CWakeup();
  161   1          Test_Int0Wakeup();
  162   1          Test_int_nest();
  163   1          Test_Xsi();
  164   1          Test_Afe();
  165   1          Test_CAL();
  166   1      
  167   1          Test_romboot();
  168   1          Test_Xbus();
  169   1          Test_RomEcc();
  170   1          Test_SPI0();
  171   1          Test_DMA();
  172   1          Test_SOFT_RST();
  173   1      
  174   1          while (1)
  175   1          {
  176   2              DBG_FLOW("\nMODULE TEST");
  177   2              DelayMs(20000);
  178   2          }
  179   1       #endif  
  180   1      }
  181          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       209     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
C251 COMPILER V5.54.0.0,  main                                                             14/04/17  16:04:00  PAGE 4   

  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
