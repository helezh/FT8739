C251 COMPILER V5.54.0.0,  Test_Uart                                                        14/04/17  16:04:04  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Test_Uart
OBJECT MODULE PLACED IN .\obj\Test_Uart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\task\Test_Uart.c XSMALL ROM(HUGE) OP
                    -TIMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task) ST
                    -RING(FAR) DEBUG PRINT(.\list\Test_Uart.lst) TABS(2) OBJECT(.\obj\Test_Uart.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2014, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: Test_UART.c
    5          *
    6          *    Author: 
    7          *
    8          *   Created: 2016-11-29
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          *   Version:
   15          *
   16          *******************************************************************************/
   17          
   18          /*******************************************************************************
   19          * 1.Included header files
   20          *******************************************************************************/
   21          #include "Test_Uart.h"
   22          
   23          #if _TEST_UART_EN
               /*******************************************************************************
               * 2.Private constant and macro definitions using #define
               *******************************************************************************/
               #define TEST_BAUD_RATE  115200
               
               #define UART_9BIT
               
               /*******************************************************************************
               * 3.Private enumerations, structures and unions using typedef
               *******************************************************************************/
               
               
               /*******************************************************************************
               * 4.Static variables
               *******************************************************************************/
               
               /*******************************************************************************
               * 5.Global variable or extern global variabls/functions
               *******************************************************************************/
               
               /*******************************************************************************
               * 6.Static function prototypes
               *******************************************************************************/
               
               /*******************************************************************************
               *   Name: Uart_Set_RaudRate
               *  Brief:
               *  Input:
               * Output:
               * Return:
               *******************************************************************************/
               void Uart_Set_RaudRate(UINT32 Rate, UINT8 main_clk)
               {
                   UINT16 cnt;
C251 COMPILER V5.54.0.0,  Test_Uart                                                        14/04/17  16:04:04  PAGE 2   

                   
                   cnt = (0x400 - (main_clk*1000000/16)/Rate);  //波特率设置
                   UART_RELH = cnt>>8;
                   UART_RELL = cnt;
               }
               
               /*******************************************************************************
               *   Name: Test_Uart
               *  Brief: 测试uart在不同分频系数下能否正常打印
               *  Input:
               * Output:
               * Return:
               *******************************************************************************/
               void Test_UART(void)
               {
                   UINT8 Div,i,main_clk = 48;
               
                   DBG_UART("\nTest Uart Start"); 
                   
                   for(Div = 0 ; Div < 2; Div ++)
                   {
                       DrvSysClkInit(Div);
               
                       main_clk = 48/CLK_DIV(Div);
               
                       #if 0
                       if(Div == 0)
                       {
                           main_clk = 48;
                       }
                       else
                       {
                           main_clk = 48/(Div+Div%2);
                       }
                       #endif
                       Uart_Set_RaudRate(BAUD_RATE,main_clk);
                       DelayMs(1000);
               
                       DBG_UART("\nmain clk is %dM",main_clk);
               
               #if 0        
                       for(i = 0;i < 100; i++)
                       {
                           DBG_UART("\n%x",0x55);
                           DBG_UART("\n%x",0xAA);            
                       }
               #endif        
                       DelayMs(1000);//延时，以保证打印以后uart的配置才会发生改变
                   }
               
               
                   DrvSysClkInit(MAIN_CLK); //切回原来状态 
                   Uart_Set_RaudRate(BAUD_RATE,48);
               
                   DelayMs(1000);
                   DBG_UART("\n%x",0x55);
                   DBG_UART("\n%x",0xAA);
               
                   /*测试发送大量数据*/
                   for(i = 0; i < 0xFF; i++ )
                   {
                       DBG_UART("\nTest Sending large number of data");
                       DBG_UART("\nThe %d Test",i);
                    }
                   
                   DBG_UART("\nTest Uart End");  
C251 COMPILER V5.54.0.0,  Test_Uart                                                        14/04/17  16:04:04  PAGE 3   

                   
               }
               #endif
  127          
  128          
  129          
  130          
  131          
  132          
  133          
  134          
  135          
  136          
  137          
  138          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
