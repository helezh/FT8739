C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C251\BIN\C251.EXE ..\..\src\main.c XSMALL ROM(HUGE) OPTIMIZE(3,SPEED) B
                    -ROWSE INCDIR(..\..\src) STRING(FAR) DEBUG CODE LISTINCLUDE SYMBOLS PRINT(.\list\main.lst) TABS(2) PREPRINT(.\list\main.i
                    -) OBJECT(.\obj\main.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: main.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2013-11-11
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          * Version: 0.2: Transplant from FT5412 by linjianjun
   15          *******************************************************************************/
   16          
   17          /*******************************************************************************
   18          * 1.Included header files
   19          *******************************************************************************/
   20          #include "global.h"
    1       =1 /*******************************************************************************
    2       =1 * Copyright (C) 2012-2014, FocalTech Systems (R),All Rights Reserved.
    3       =1 *
    4       =1 * File Name: Test_Afe.h
    5       =1 *
    6       =1 *    Author: xinkunpeng
    7       =1 *
    8       =1 *   Created: 2014-05-15
    9       =1 *
   10       =1 *  Abstract:
   11       =1 *
   12       =1 * Reference:
   13       =1 *
   14       =1 *   Version:
   15       =1 *******************************************************************************/
   16       =1 #ifndef __GLOBAL_H__
   17       =1 #define __GLOBAL_H___
   18       =1 
   19       =1 /*******************************************************************************
   20       =1 * 1.Included files
   21       =1 *******************************************************************************/
   22       =1 #include <intrins.h>
    1       =2 /*--------------------------------------------------------------------------
    2       =2 INTRINS.H
    3       =2 
    4       =2 Intrinsic functions for C251 Version 3.
    5       =2 Copyright (c) 1995-2001 Keil Elektronik GmbH and Keil Software, Inc.
    6       =2 All rights reserved.
    7       =2 --------------------------------------------------------------------------*/
    8       =2 
    9       =2 #pragma SAVE
   10       =2 #pragma PARM251
   11       =2 
   12       =2 #if __C251__ >= 200
   13       =2 #pragma FUNCTIONS(STATIC)
   14       =2 /* intrinsic functions are reentrant, but need static attribute */
   15       =2 #endif
C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 2   

   16       =2 
   17       =2 extern void          _nop_     (void);
   18       =2 extern bit           _testbit_ (bit);
   19       =2 extern unsigned char _cror_    (unsigned char, unsigned char);
   20       =2 extern unsigned int  _iror_    (unsigned int,  unsigned char);
   21       =2 extern unsigned long _lror_    (unsigned long, unsigned char);
   22       =2 extern unsigned char _crol_    (unsigned char, unsigned char);
   23       =2 extern unsigned int  _irol_    (unsigned int,  unsigned char);
   24       =2 extern unsigned long _lrol_    (unsigned long, unsigned char);
   25       =2 extern unsigned char _chkfloat_  (float x)  reentrant;
   26       =2 extern unsigned char _chkdouble_ (double x) reentrant;
   27       =2 
   28       =2 #pragma RESTORE
   23       =1 
   24       =1 /*******************************************************************************
   25       =1 * 2.Private constant and macro definitions using #define
   26       =1 *******************************************************************************/
   27       =1 sfr CGUCON4 = 0xCC;
   28       =1 sfr P0BUF   = 0x80;
   29       =1 sfr P0DIR   = 0xAC;
   30       =1 sfr P0MOD   = 0xEB;
   31       =1 sfr P0SEL   = 0xEC;
   32       =1 sfr P1BUF   = 0x94;   /*P1Buf*/
   33       =1 sfr P1DIR   = 0xAD;   /*P1口方向配置，1:输出, 0:输入*/
   34       =1 sfr P1MOD   = 0xED;   /*0:P1 use as gpio;1:p1 use as function define*/
   35       =1 sfr P1SEL   = 0xEE;   /*0:P1 as OD port; 1:P1 as PUSH-PULL port*/
   36       =1 
   37       =1 
   38       =1 sbit P0_0 = P0BUF^0;
   39       =1 sbit P0_1 = P0BUF^1;
   40       =1 sbit P0_2 = P0BUF^2;
   41       =1 sbit P0_3 = P0BUF^3;
   42       =1 sbit P0_4 = P0BUF^4;
   43       =1 sbit P0_5 = P0BUF^5;
   44       =1 sbit P0_6 = P0BUF^6;
   45       =1 sbit P0_7 = P0BUF^7;
   46       =1 
   47       =1 sbit P1_0 = P1BUF^0;
   48       =1 sbit P1_1 = P1BUF^1;
   49       =1 sbit P1_2 = P1BUF^2;
   50       =1 sbit P1_3 = P1BUF^3;
   51       =1 sbit P1_4 = P1BUF^4;
   52       =1 sbit P1_5 = P1BUF^5;
   53       =1 sbit P1_6 = P1BUF^6;
   54       =1 sbit P1_7 = P1BUF^7;
   55       =1 
   56       =1 
   57       =1 #define DRAM  data     // data can be mapped directly to the 251 data space
   58       =1 #define XRAM  near     // xdata uses MOVX or MOV @DR56, use 251 near instead
   59       =1 #define PRAM  near     // pdata uses MOVX Ri, use 251 near instead
   60       =1 #define CROM  code     // code uses MOVC A, use 251 const instead
   61       =1 #define ECODE ecode
   62       =1 
   63       =1 /*APP info*/
   64       =1 #define APP_VERIF_ADDR         0xFEE900  // Verification Info
   65       =1 #define APP_VERIF_LEN          0x20
   66       =1 #define FW_CFG_TOTAL_SIZE      0x80
   67       =1 
   68       =1 /* test pram setting */
   69       =1 #define PRAM1_START_ADDR       (UINT32)0xFEE800
   70       =1 #define PRAM2_START_ADDR       (UINT32)0xFF0000
   71       =1 
   72       =1 #define PRAM1_CODE_LEN         0x300    //PRAM1中要搬运代码的长度
   73       =1 #define PRAM2_CODE_LEN         0x200    //PRAM2中要搬运代码的长度
   74       =1 
   75       =1 #define PRAM1_COPY_ADDR        (UINT32)0xFF2000  //PRAM1中的代码放到PRAM2中的指定起始位置
C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 3   

   76       =1 #define PRAM2_COPY_ADDR        (UINT32)0xFEF000  //PRAM2中的代码放到PRAM1中的指定位置
   77       =1 
   78       =1 #define PRAM1_TEST_LEN         (PRAM2_START_ADDR - PRAM1_START_ADDR)
   79       =1 #define PRAM2_TEST_LEN         (0xFFFFFF - PRAM2_START_ADDR)
   80       =1 
   81       =1 #define PRAM_ADDR8(n)          (*((UINT8 far *)((UINT32)0xFEE800 + n)))
   82       =1 #define PRAM_ADDR16(n)         (*((UINT16 far *)((UINT32)0xFEE800 + n)))
   83       =1 
   84       =1 #define TEST_PATTERN1          0x55
   85       =1 #define TEST_PATTERN2          0xAA
   86       =1 /*******************************************************************************
   87       =1 * 3.Private enumerations, structures and unions using typedef
   88       =1 *******************************************************************************/
   89       =1 typedef unsigned char  UINT8;
   90       =1 typedef unsigned short UINT16;
   91       =1 typedef unsigned long  UINT32;
   92       =1 
   93       =1 /*******************************************************************************
   94       =1 * 4.Global variable extern declarations
   95       =1 *******************************************************************************/
   96       =1 
   97       =1 /*******************************************************************************
   98       =1 * 5.Global function prototypes
   99       =1 *******************************************************************************/
  100       =1 void test_pram1(void);
  101       =1 void test_pram2(void);
  102       =1 #endif
   21          /*******************************************************************************
   22          * 2.Private constant and macro definitions using #define
   23          *******************************************************************************/
   24          
   25          /*******************************************************************************
   26          * 3.Private enumerations, structures and unions using typedef
   27          *******************************************************************************/
   28          
   29          /*******************************************************************************
   30          * 4.Static variables
   31          *******************************************************************************/
   32          UINT8 ECODE g_aucVerfication[APP_VERIF_LEN+FW_CFG_TOTAL_SIZE] _at_  APP_VERIF_ADDR;
   33          
   34          /*******************************************************************************
   35          * 5.Global variable or extern global variabls/functions
   36          *******************************************************************************/
   37          
   38          /*******************************************************************************
   39          * Name: main
   40          * Brief:
   41          * Input:
   42          * Output:
   43          * Return:
   44          *******************************************************************************/
   45          
   46          void main(void)
   47          {
   48   1      
   49   1          CGUCON4 = 0x00;
   50   1      
   51   1          P0MOD   = 0x00;
   52   1          P0DIR   = 0xFF;
   53   1          P0SEL   = 0xFF;
   54   1          P0BUF   = 0x00;
   55   1      
   56   1          P1MOD   = 0x00;
   57   1          P1DIR   = 0xFF;
   58   1          P1SEL   = 0xFF;
   59   1          P1BUF   = 0xFF;
C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 4   

   60   1      
   61   1          while(1)
   62   1          {
   63   2              test_pram1();        
   64   2              test_pram2();
   65   2          }
   66   1      
   67   1      }
   68          
C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


;       FUNCTION main? (BEGIN)
                                                ; SOURCE LINE # 46
                                                ; SOURCE LINE # 49
000000 75CC00         MOV      CGUCON4,#00H
                                                ; SOURCE LINE # 51
000003 75EB00         MOV      P0MOD,#00H
                                                ; SOURCE LINE # 52
000006 75ACFF         MOV      P0DIR,#0FFH
                                                ; SOURCE LINE # 53
000009 75ECFF         MOV      P0SEL,#0FFH
                                                ; SOURCE LINE # 54
00000C 758000         MOV      P0BUF,#00H
                                                ; SOURCE LINE # 56
00000F 75ED00         MOV      P1MOD,#00H
                                                ; SOURCE LINE # 57
000012 75ADFF         MOV      P1DIR,#0FFH
                                                ; SOURCE LINE # 58
000015 75EEFF         MOV      P1SEL,#0FFH
                                                ; SOURCE LINE # 59
000018 7594FF         MOV      P1BUF,#0FFH
                                                ; SOURCE LINE # 61
               ?C0003:
                                                ; SOURCE LINE # 63
00001B 9A000000    E  ECALL    test_pram1?
                                                ; SOURCE LINE # 64
00001F 9A000000    E  ECALL    test_pram2?
                                                ; SOURCE LINE # 65
000023 80F6           SJMP     ?C0003
;       FUNCTION main? (END)

C251 COMPILER V5.54.0.0,  main                                                             03/02/17  16:43:29  PAGE 6   

Name                                    Class    Space Type   Offset   Size
---------------------------------------------------------------------------

UINT8. . . . . . . . . . . . . . . . .  type           uchar  000000H  1
UINT16 . . . . . . . . . . . . . . . .  type           ushort 000000H  2
UINT32 . . . . . . . . . . . . . . . .  type           ulong  000000H  4
CGUCON4. . . . . . . . . . . . . . . .  sfr      data  uchar  0CCH     1
P1SEL. . . . . . . . . . . . . . . . .  sfr      data  uchar  0EEH     1
P0SEL. . . . . . . . . . . . . . . . .  sfr      data  uchar  0ECH     1
P1MOD. . . . . . . . . . . . . . . . .  sfr      data  uchar  0EDH     1
P0MOD. . . . . . . . . . . . . . . . .  sfr      data  uchar  0EBH     1
P1DIR. . . . . . . . . . . . . . . . .  sfr      data  uchar  0ADH     1
P0DIR. . . . . . . . . . . . . . . . .  sfr      data  uchar  0ACH     1
P1BUF. . . . . . . . . . . . . . . . .  sfr      data  uchar  094H     1
P0BUF. . . . . . . . . . . . . . . . .  sfr      data  uchar  080H     1
test_pram1?. . . . . . . . . . . . . .  extern   ecode funct  000000H  
test_pram2?. . . . . . . . . . . . . .  extern   ecode funct  000000H  
main?. . . . . . . . . . . . . . . . .  public   ecode funct  000000H  37
g_aucVerfication . . . . . . . . . . .  public   ecode array  000000H  160


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       197     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
