C251 COMPILER V5.54.0.0,  main                                                             16/06/17  11:20:13  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\main.c XSMALL ROM(HUGE) OPTIMIZE(9,S
                    -PEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task;..\..\src\inc
                    -lude\config) STRING(FAR) DEBUG PRINT(.\list\main.lst) TABS(2) OBJECT(.\obj\main.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: main.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2013-11-11
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          * Version: 0.2: Transplant from FT5422 by linjianjun
   15          *******************************************************************************/
   16          
   17          /*******************************************************************************
   18          * 1.Included header files
   19          *******************************************************************************/
   20          #include <intrins.h>
   21          #include "CfgGlobal.h"
   22          
   23          /*******************************************************************************
   24          * 2.Private constant and macro definitions using #define
   25          *******************************************************************************/
   26          
   27          #define APP_INFO_ADDR             0xFEE900  // Verification Info
   28          #define APP_VERIF_LEN             0x20
   29          
   30          #define FW_CFG_TOTAL_SIZE         0x80
   31          
   32          /*******************************************************************************
   33          * 3.Private enumerations, structures and unions using typedef
   34          *******************************************************************************/
   35          
   36          /*******************************************************************************
   37          * 4.Static variables
   38          *******************************************************************************/
   39          //UINT8 XRAM g_ucTestStack;      // system pram address stack test
   40          //UINT8 CROM g_ucTest[40000];    // use to add the code size to 64K
   41          /*******************************************************************************
   42          * 5.Global variable or extern global variabls/functions
   43          *******************************************************************************/
   44          void CRCCCITT(const UINT8* pDataIn, UINT16 iLenIn, UINT16* pCRCOut);
   45          
   46          /* 预留给校验码信息的代码区 */
   47          UINT8 ECODE g_aucVerfication[APP_VERIF_LEN+FW_CFG_TOTAL_SIZE] _at_ APP_INFO_ADDR;
   48          /*******************************************************************************
   49          * 6.Static function prototypes
   50          *******************************************************************************/
   51          
   52          /*******************************************************************************
   53          *   Name: init_mcu
   54          *  Brief:
   55          *  Input:
   56          * Output:
   57          * Return:
C251 COMPILER V5.54.0.0,  main                                                             16/06/17  11:20:13  PAGE 2   

   58          *******************************************************************************/
   59          void init_mcu(void)
   60          {
   61   1          UINT8 i,cnt;    
   62   1          I2CRI  = 0;
   63   1          I2CTI  = 0;
   64   1          I2CSTP = 0;
   65   1          I2CBUF = 0;
   66   1      
   67   1      #if _TEST_SFR_EN
                   for (i = 0x80; i < 0xff; i++)
                   {
                     g_ucSFR[i]   = SFRGetRegMapDataNormal(i);
                   }
                   
                   g_ucSFR[0xFF] = SFRGetRegMapDataNormal(0xFF);
                   g_ucSFR[0xC0] = SFRGetRegMapDataNormal(0xC0);
                   P1MOD = 0x00;
                   P1DIR = 0xFF;
                   P1SEL = 0xFF;
                   g_ucSFR[0x94] = SFRGetRegMapDataNormal(0x94);
               #endif
   80   1          DrvSysClkInit(MAIN_CLK);
   81   1          DrvIOInit();
   82   1          DrvUartInit();
   83   1          EA = 1;    
   84   1        
   85   1          DBG_FLOW("\n\rModule test:");
   86   1          DBG_FLOW(__DATE__);
   87   1          for (i = 0; i < 8; i++)
   88   1          {
   89   2              DBG_FLOW("\n\rCGU%x: %x", i, g_ucbuf[i]);
   90   2          }
   91   1          DBG_FLOW("\n\rSOFT_RST: %x", g_ucbuf[8]);
   92   1          DBG_FLOW("\n\rPOR_STA: %x", g_ucbuf[9]);
   93   1          DBG_FLOW("\n\rRST_STA: %x", g_ucbuf[10]);
   94   1          DBG_FLOW("\n\rANACON:%x", g_ucbuf[11]);
   95   1          DBG_FLOW("\n\rIWKSTA:%02x",IWKSTA);
   96   1          DBG_FLOW("\n\rPOR_STA:%02x",POR_STA);
   97   1      
   98   1          /*若需要使用lvd中断/lvd_cnt/lvd_sta需要开启*/
   99   1          LVD_VDDI_EN = 1;
  100   1          LVD_AVEE_EN = 1;
  101   1          LVD_AVDD_EN = 1;
  102   1          
  103   1          CNT_MASK = 0;
  104   1          cnt = CNT_STA; 
  105   1          DBG_FLOW("\n\rPORRST_CNT:%02x",cnt);
  106   1          
  107   1          CNT_MASK = 1;
  108   1          cnt = CNT_STA;    
  109   1          DBG_FLOW("\n\rWDTRST_CNT:%02x",cnt);
  110   1      
  111   1          CNT_MASK = 2;
  112   1          cnt = CNT_STA;    
  113   1          DBG_FLOW("\n\rEXTRST_CNT:%02x",cnt);
  114   1      
  115   1          CNT_MASK = 3;
  116   1          cnt = CNT_STA;      
  117   1          DBG_FLOW("\n\rLCDRST_CNT:%02x",cnt);
  118   1      
  119   1      
  120   1          ESD_RST_EN = 1;  //发生esd，产生复位
  121   1      
  122   1          CNT_MASK = 4;
  123   1          cnt = CNT_STA;    
C251 COMPILER V5.54.0.0,  main                                                             16/06/17  11:20:13  PAGE 3   

  124   1          DBG_FLOW("\n\rESDRST_CNT:%02x",cnt);
  125   1      
  126   1      
  127   1          CNT_MASK = 5;
  128   1          cnt = CNT_STA;    
  129   1          DBG_FLOW("\n\rLVDRST_CNT:%02x",cnt);
  130   1      
  131   1      
  132   1          CNT_MASK = 0x08;
  133   1          cnt = CNT_STA;    
  134   1          DBG_FLOW("\n\rCPU_PORRST_CNT:%02x",cnt);
  135   1      
  136   1      
  137   1          CNT_MASK = 0x09;
  138   1          cnt = CNT_STA;    
  139   1          DBG_FLOW("\n\rCPU_WDTRST_CNT:%02x",cnt);
  140   1            
  141   1      
  142   1          CNT_MASK = 0x0A;
  143   1          cnt = CNT_STA;    
  144   1          DBG_FLOW("\n\rCPU_EXTRST_CNT:%02x",cnt);
  145   1      
  146   1          CNT_MASK = 0x0B;
  147   1          cnt = CNT_STA;    
  148   1          DBG_FLOW("\n\rCPU_LCDRST_CNT:%02x",cnt);
  149   1      
  150   1          CNT_MASK = 0x0C;
  151   1          cnt = CNT_STA;    
  152   1          DBG_FLOW("\n\rCPU_ESDRST_CNT:%02x",cnt);
  153   1      
  154   1          CNT_MASK = 0x0D;
  155   1          cnt = CNT_STA;    
  156   1          DBG_FLOW("\n\rCPU_LVDRST_CNT:%02x",cnt);
  157   1          
  158   1          DBG_FLOW("\n\rinit ok");
  159   1      
  160   1      #if 0
                 while(1)
                 {
                   DBG_FLOW("\nLVD_STA:%d",LVD_STA);
                   DBG_FLOW("\nESD_STA:%d",ESD_STA);
                   DBG_FLOW("\nLVD_FLAG:%d",LVD_FLAG);
                   DBG_FLOW("\nESD_FLAG:%d",ESD_FLAG);
                   DBG_FLOW("\nLVD_VDDI_STA:%d",LVD_VDDI_STA);
                   DBG_FLOW("\nLVD_AVEE_STA:%d",LVD_AVEE_STA);
                   DBG_FLOW("\nLVD_AVDD_STA:%d\n",LVD_AVDD_STA);
                   DelayMs(1000);
                 }
               #endif    
  173   1      
  174   1      }
  175          
  176          /*******************************************************************************
  177          *   Name: main
  178          *  Brief:
  179          *  Input:
  180          * Output:
  181          * Return:
  182          *******************************************************************************/
  183          void main(void)
  184          {
  185   1          unsigned char i=0;
  186   1      
  187   1       #if 0  
                   UINT8 buf[8]={0};
                   UINT16 crc=0;
C251 COMPILER V5.54.0.0,  main                                                             16/06/17  11:20:13  PAGE 4   

                   for(i=0;i<8;i++)
                   {
                       buf[i]=0xa7;
                   }
                   
                   CRCCCITT(buf,6,&crc);
                   HOLD;
               #endif
  198   1          
  199   1          init_mcu();
  200   1      
  201   1      #if 1
  202   1          
  203   1          Test_UART();
  204   1          Test_SFR();
  205   1          Test_Dram();
  206   1          Test_Prom();
  207   1          Test_Aram();
  208   1          Test_SPI_Flash();
  209   1          Test_Spi0Reg();
  210   1          Test_XsiReg();
  211   1          Test_XbusReg();
  212   1          Test_AsmReg();
  213   1          Test_CalReg();
  214   1          Test_LcdReg();
  215   1          Test_AfeReg(); 
  216   1          Test_Afe_Ram();
  217   1          Test_DebugOut();    
  218   1      
  219   1          Test_LED();
  220   1          Test_I2C();
  221   1          
  222   1          Test_WDT();
  223   1          Test_RTC();
  224   1          Test_Counter();
  225   1          
  226   1          Test_Timer();    
  227   1          Test_GPIO();
  228   1          Test_I2CWakeup();
  229   1          Test_Int0Wakeup();
  230   1          Test_int_nest();
  231   1          Test_Xsi();
  232   1          Test_Afe();
  233   1          Test_CAL();
  234   1      
  235   1          Test_romboot();
  236   1          Test_Xbus();
  237   1          Test_RomEcc();
  238   1          Test_SPI0();
  239   1          Test_DMA();
  240   1          Test_SPI0_Wakeup();
  241   1          Test_SOFT_RST();
  242   1      
  243   1          while (1)
  244   1          {
  245   2              DBG_FLOW("\nMODULE TEST");
  246   2              DelayMs(2000);
  247   2          }
  248   1       #endif  
  249   1      }
  250          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       718     ------
C251 COMPILER V5.54.0.0,  main                                                             16/06/17  11:20:13  PAGE 5   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       386     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
