C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Test_RTC
OBJECT MODULE PLACED IN .\obj\Test_RTC.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\task\Test_RTC.c XSMALL ROM(HUGE) OPT
                    -IMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task;..\.
                    -.\src\include\config) STRING(FAR) DEBUG PRINT(.\list\Test_RTC.lst) TABS(2) OBJECT(.\obj\Test_RTC.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2013-2014, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: Test_RTC.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2014-04-18
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *******************************************************************************/
   14          
   15          /*******************************************************************************
   16          * 1.Included header files
   17          *******************************************************************************/
   18          #include "Test_RTC.h"
   19          
   20          #if _TEST_RTC_EN
                
               /*******************************************************************************
               * 2.Private constant and macro definitions using #define
               *******************************************************************************/
               /* RTC */
               #define RTC_MS        32
               #define RTC_N_MS     (RTC_MS*150)//100ms
               
               /*
                * Normal   :此时CPU启动RTC，RTC产生一次定时中断，计时时间与计数Counter相关
                * Auto     :此时CPU启动一次RTC，产生一次RTC中断给CPU，产生无限次中断给ASM，
                            直到CPU CLR RTC
                * LCD Start:此时RTC会根据LCD信号启动，在Counter中间会自动屏蔽LCD的start
                            信号
                */
               
               //RTC MODE 0-Normal,1-Auto,2-Lcd Start
               #define RTC_MODE    0
               
               /* time0 */
               #define T0MODE                            0x02      // 高四位为T1,低四位为T0
               #define IRQTIME0_VALUE                    1         // (MS)
               //#define IRQTIME0_LOAD()                   TMOD|=T0MODE;TH0=IRQTIME0_VALUE;TL0=0 old
               #define IRQTIME0_LOAD()                   do{TMOD|=T0MODE;TH0=IRQTIME0_VALUE;TL0=0;}while(0)
               
               #define TEST_RTC_WK                       1         // 0:不测试rtc wk；1 测试rtc wk
               #define INT1_TRI_MODE                     0         // 0:LOW level triggered 1:falling edge
               
               // 设置LCD Start信号源--0--Vstart,1--Vmid;2--Vend;3--Vblank
               #define LCD_START_SRC   0
               
               //以下三种模式最多只能进入一种
               #define IDLE_MODE                         0         // 0:不进入idle   1:进入idle
               #define STANDBY_MODE                      1         // 0:不进入standy 1:进入standy
               #define STOP_MODE                         0         // 0:不进入stop   1:进入stop
               
               /*******************************************************************************
C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 2   

               * 3.Private enumerations, structures and unions using typedef
               *******************************************************************************/
               
               /*******************************************************************************
               * 4.Static variables
               *******************************************************************************/
               UINT8 g_nWKsrc     = 0x00;
               BOOLEAN g_bWKsrcOut = 1;
               BOOLEAN g_bRtcFlag  = 0;
               
               UINT16 m_usCnt = 0;
               /*******************************************************************************
               * 5.Global variable or extern global variabls/functions
               *******************************************************************************/
               
               /*******************************************************************************
               * 6.Static function prototypes
               *******************************************************************************/
               
               
               /*******************************************************************************
               *   Name:  DrvRTCInit
               *  Brief:  RTC初始化
               *          1.时钟是固定32K, 1秒32000次，1ms是32次 = 0x20
               *          2.计数器为16位，--到0，产生中断
               *          3.最大定时时间: t = 0x10000/0x20 = 65536/32 = 2048ms
               *  Input:
               * Output:
               * Return:
               *******************************************************************************/
               void DrvRTCInit(void)
               {
                   // 32K时钟使能
                   CLK_WP = 1;
                   EN_32K = 1;
                   RTC_32K_EN = 1;
                   
                   // rtc clk enable
                   RTCCKEN = 1;
               
                   // clear rtc
                   RTC_WP  = 1;
                   RTC_CLR = 1;
                   //DelayMs(100);
               
                   // 设置RTC计数时间
                   RTCIVH  = RTC_N_MS>>8;
                   RTCIVL  = RTC_N_MS;
                   //RTCIVH  = 0xFF;
                   //RTCIVL  = 0xFF;
                   
                   //Normal mode
               #if (RTC_MODE == 0)
                   RTC_AUTO_MODE = 0;
                   LCD_START_EN  = 0;
               #endif
               
                   //Auto mode
               #if (RTC_MODE == 1)
                   RTC_AUTO_MODE   = 1;
                   LCD_START_EN    = 0;
               #endif
               
                   //LCD Start mode
               #if (RTC_MODE == 2)
                   #if (LCD_START_SRC == 0)
C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 3   

                   RTCCON1 |= 0x00;
                   #elif (LCD_START_SRC == 1)
                   RTCCON1 |= 0x02;
                   #elif (LCD_START_SRC == 2)
                   RTCCON1 |= 0x04;
                   #elif (LCD_START_SRC == 3)
                   RTCCON1 |= 0x06;
                   #endif
                   RTC_AUTO_MODE = 0;
                   LCD_START_EN = 1;
                   
                   P0MOD |= BITn(6);
                   TEST_OUT3_EN = 1;
                   TESTCON3 |= 0x0D;       //0D--Vstart output from P0_6;0E--Vmid;
               #endif
               
               #if TEST_RTC_WK
                   RTC_CNT_WKEN = 1;  // RTC wake en  
               #endif
               
                   //RTC中断使能
                   //RTC_INT_EN_CPU = 1;
                
                   DBG_RTC("\nRTC Interval:%dms",RTC_N_MS/RTC_MS);         // 1.8ms@115200bps total 19 character 100us p
             -er character
                   DBG_RTC("\nRTC_IVH:%02X,RTC_IVL:%02X",RTCIVH,RTCIVL);
                   DBG_RTC("\ninit RTC OK!");
                   DelayMs(10);
               }
               
               /*******************************************************************************
               *   Name:
               *  Brief:
               *  Input:
               * Output:
               * Return: INT0中断初始化函数
               *******************************************************************************/
               void ExternInt0Init(void)
               {
                   IT0   = 0;   // 0:LOW level triggered 1:falling edge
               
                   IPL0  = 0;
                   IPH0  = 0;
               
                   IPLX0 = 1;
                   IPHX0 = 1;  //中断0优先级必须最高
               
                   EX0   = 1;
               }
               
               /*******************************************************************************
               *   Name: DrvSysTimer0_Init
               *  Brief: 定时1ms
               *  Input:
               * Output:
               * Return: timer0 定时器初始化函数
               *******************************************************************************/
               void DrvSysTimer0_Init(void)
               {
                   TR0 = 0;     /* Stop Timer Counter */
                   IRQTIME0_LOAD();    //1//1ms interval
                   
                   TR0 = 1;
                   ET0 = 1;     // enable timer interrupt
               }
               
C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 4   

               /*******************************************************************************
               *   Name:
               *  Brief:
               *  Input:
               * Output:
               * Return: INT1中断初始化函数
               *******************************************************************************/
               void ExternInt1Init(void)
               {
                   IT1 = INT1_TRI_MODE;   // 0:LOW level triggered 1:falling edge
                   IPHX1 = 1;
                   IPLX1 = 1;
                   EX1   = 1;       
                   EA    = 1;
               }
               
               /*******************************************************************************
               *   Name:
               *  Brief:
               *  Input:
               * Output:
               * Return: INT0中断响应函数
               *******************************************************************************/
               void Exint0_IRQHandler(void) interrupt 0
               {
                   P0_2 = 1;
                   if (g_bWKsrcOut)
                   {
                       g_nWKsrc = IWKSTA;
                       g_bWKsrcOut = FALSE;
                   }
                   g_bRtcFlag = TRUE;
                   if(RTC_CNT_INT)
                   {
                       RTC_CNT_WKEN = 0;
                       DBG_FLOW("\n\rrtc int0");
                   }
               }
               
               /*******************************************************************************
               *   Name:
               *  Brief:
               *  Input:
               * Output:
               * Return: timer0 定时器中断响应函数
               *******************************************************************************/
               void Timer0_IRQHandler(void) interrupt  1
               {
                   m_usCnt++;
               }
               
               /*******************************************************************************
               *   Name:
               *  Brief:
               *  Input:
               * Output:
               * Return: INT1中断响应函数.
               *******************************************************************************/
               void Exint1_IRQHandler(void) interrupt 2
               {   
                   P0_2 = 0;    
                   //如果是在AUTO模式，则不清rtc，否则一定要清RTC，不然会一直在中断中出不去
               #if !(RTC_MODE == 1)
                   while(RTC_START_STA == 0);
                   RTC_WP  = 1;
                   RTC_CLR = 1;
C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 5   

               #endif
               
                   DBG_FLOW("\n\rrtc int1");
               
                   g_bRtcFlag = TRUE;
               
               #if TEST_RTC_WK
                   RTC_CNT_WKEN = 1;
               #endif
               }
               
               /*******************************************************************************
               *   Name: Test_RTC
               *  Brief:
               *  Input:
               * Output:
               * Return:
               *******************************************************************************/
               void Test_RTC(void)
               {
                   P0_2 = 0;
                   DrvSysTimer0_Init();
                   DrvRTCInit();
                   ExternInt1Init();
               
                   #if TEST_RTC_WK
                   ExternInt0Init();
                   #endif 
               
                   P0_2 = 1;
                   // RTC Start
                   RTC_WP    = 1;
                   DelayMs(10);
                   RTC_START = 1;
                   while (RTC_START_STA == 0);
                   //RTC Clear
                   //RTC_WP  = 1;
                   //RTC_CLR = 1;
                   P0_2 = 0;
               /*    
                *  RTC_CNT_INT标志位测试
                   //RTC_CNT_INT = 0;
                   //while (RTC_CNT_INT == 0);
                   //P0_2 = 1;  
                   //while (RTC_CNT_INT == 1)
                   //{
                   //    P0_2 = !P0_2;
                   //}
               */
                   while (1)
                   {      
                       g_bRtcFlag = FALSE;
                       g_bWKsrcOut = 1;
                       m_usCnt = 0;
               
                   #if 0
                       // RTC Start
                       RTC_WP    = 1;
                       RTC_START = 1;
                   #endif
                   
                       #if 0
                       if(m_usCnt = 10)
                       {
                           LCD_START_EN = 0;
                       }
C251 COMPILER V5.54.0.0,  Test_RTC                                                         22/06/17  18:27:22  PAGE 6   

                       else if(m_usCnt = 20)
                       {
                           LCD_START_EN = 1;
                       }
                       #endif
               
                       //idle_mode
                       #if  IDLE_MODE
                       DBG_RTC("\n\rjoin in Idle");
                       DelayMs(50);
                       DrvSysPowerIdle();
                       DBG_RTC("\n\rexit Idle");        
                       #endif
               
                       //standby_mode
                       #if STANDBY_MODE
                       DBG_RTC("\n\rjoin in Standby");
                       DelayMs(50);    
                       DrvSysPowerStandby();
                       DBG_RTC("\n\rexit Standby");
                       #endif
                       
                       //stop_mode
                       #if STOP_MODE
                       DBG_RTC("\n\rjoin in Stop");
                       DelayMs(50);        
                       DrvSysPowerStop();
                       DBG_RTC("\n\rexit Stop");        
                       #endif
                       
                       while (!g_bRtcFlag);
                       DBG_RTC("\nm_usCnt=%dms",m_usCnt);   
                       DelayMs(10);
                       
                       if (g_bRtcFlag && g_bWKsrcOut == FALSE)
                       {
                           DBG_RTC("\n\rWK src:%x",g_nWKsrc);
                       }
                   }
               }
               #endif
  362          
  363          
  364          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
