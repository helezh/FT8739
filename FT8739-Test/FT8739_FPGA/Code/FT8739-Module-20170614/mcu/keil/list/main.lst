C251 COMPILER V5.54.0.0,  main                                                             22/06/17  18:27:19  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\main.c XSMALL ROM(HUGE) OPTIMIZE(9,S
                    -PEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task;..\..\src\inc
                    -lude\config) STRING(FAR) DEBUG PRINT(.\list\main.lst) TABS(2) OBJECT(.\obj\main.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: main.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2013-11-11
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          * Version: 0.2: Transplant from FT5422 by linjianjun
   15          *******************************************************************************/
   16          
   17          /*******************************************************************************
   18          * 1.Included header files
   19          *******************************************************************************/
   20          #include <intrins.h>
   21          #include "CfgGlobal.h"
   22          
   23          /*******************************************************************************
   24          * 2.Private constant and macro definitions using #define
   25          *******************************************************************************/
   26          
   27          #define APP_INFO_ADDR             0xFEE900  // Verification Info
   28          #define APP_VERIF_LEN             0x20
   29          
   30          #define FW_CFG_TOTAL_SIZE         0x80
   31          
   32          /*******************************************************************************
   33          * 3.Private enumerations, structures and unions using typedef
   34          *******************************************************************************/
   35          
   36          /*******************************************************************************
   37          * 4.Static variables
   38          *******************************************************************************/
   39          //UINT8 XRAM g_ucTestStack;      // system pram address stack test
   40          //UINT8 CROM g_ucTest[40000];    // use to add the code size to 64K
   41          /*******************************************************************************
   42          * 5.Global variable or extern global variabls/functions
   43          *******************************************************************************/
   44          void CRCCCITT(const UINT8* pDataIn, UINT16 iLenIn, UINT16* pCRCOut);
   45          
   46          /* 预留给校验码信息的代码区 */
   47          UINT8 ECODE g_aucVerfication[APP_VERIF_LEN+FW_CFG_TOTAL_SIZE] _at_ APP_INFO_ADDR;
   48          /*******************************************************************************
   49          * 6.Static function prototypes
   50          *******************************************************************************/
   51          
   52          /*******************************************************************************
   53          *   Name: init_mcu
   54          *  Brief:
   55          *  Input:
   56          * Output:
   57          * Return:
C251 COMPILER V5.54.0.0,  main                                                             22/06/17  18:27:19  PAGE 2   

   58          *******************************************************************************/
   59          void init_mcu(void)
   60          {
   61   1          UINT8 i,cnt;    
   62   1          I2CRI  = 0;
   63   1          I2CTI  = 0;
   64   1          I2CSTP = 0;
   65   1          I2CBUF = 0;
   66   1      
   67   1      #if _TEST_SFR_EN
                   for (i = 0x80; i < 0xff; i++)
                   {
                     g_ucSFR[i]   = SFRGetRegMapDataNormal(i);
                   }
                   
                   g_ucSFR[0xFF] = SFRGetRegMapDataNormal(0xFF);   //LED_H_NUM
                   g_ucSFR[0xC0] = SFRGetRegMapDataNormal(0xC0);   //AIF
                   P1MOD = 0x00;
                   P1DIR = 0xFF;
                   P1SEL = 0xFF;
                   g_ucSFR[0x94] = SFRGetRegMapDataNormal(0x94);   //P1BUF
               #endif
   80   1          DrvSysClkInit(MAIN_CLK);
   81   1          //SEL_32K_SRC = 1;        // select 32K src OSC
   82   1          //FlASH_HOLD = 0;         // Flash Hold测试
   83   1          DrvIOInit();
   84   1          //DelayMs(3000);
   85   1          DrvUartInit();
   86   1          
   87   1          EA = 1;    
   88   1        
   89   1          DBG_FLOW("\n\rModule test:");
   90   1          DBG_FLOW(__DATE__);
   91   1          for (i = 0; i < 9; i++)
   92   1          {
   93   2              DBG_FLOW("\n\rCGU%x: %02x", i, g_ucbuf[i]);
   94   2          }
   95   1          DBG_FLOW("\n\rSFT_RST: %x", g_ucbuf[9]);
   96   1          DBG_FLOW("\n\rPOR_STA: %x", g_ucbuf[10]);
   97   1          DBG_FLOW("\n\rRST_STA: %x", g_ucbuf[11]);
   98   1          DBG_FLOW("\n\rANACON:%x", g_ucbuf[12]);
   99   1          DBG_FLOW("\n\rIWKSTA:%02x",IWKSTA);
  100   1      
  101   1          /*若需要使用lvd中断/lvd_cnt/lvd_sta需要开启*/
  102   1          LVD_VDDI_EN = 1;
  103   1          LVD_AVEE_EN = 1;
  104   1          LVD_AVDD_EN = 1;
  105   1          
  106   1          CNT_MASK = 0;
  107   1          cnt = CNT_STA; 
  108   1          DBG_FLOW("\n\rPORRST_CNT:%02x",cnt);
  109   1          
  110   1          CNT_MASK = 1;
  111   1          cnt = CNT_STA;    
  112   1          DBG_FLOW("\n\rWDTRST_CNT:%02x",cnt);
  113   1      
  114   1          CNT_MASK = 2;
  115   1          cnt = CNT_STA;    
  116   1          DBG_FLOW("\n\rEXTRST_CNT:%02x",cnt);
  117   1      
  118   1          CNT_MASK = 3;
  119   1          cnt = CNT_STA;      
  120   1          DBG_FLOW("\n\rLCDRST_CNT:%02x",cnt);
  121   1          
  122   1          ESD_RST_EN = 0;  //发生esd，产生复位
  123   1      
C251 COMPILER V5.54.0.0,  main                                                             22/06/17  18:27:19  PAGE 3   

  124   1          CNT_MASK = 4;
  125   1          cnt = CNT_STA;    
  126   1          DBG_FLOW("\n\rESDRST_CNT:%02x",cnt);
  127   1      
  128   1      
  129   1          CNT_MASK = 5;
  130   1          cnt = CNT_STA;    
  131   1          DBG_FLOW("\n\rLVDRST_CNT:%02x",cnt);
  132   1      
  133   1      
  134   1          CNT_MASK = 0x08;
  135   1          cnt = CNT_STA;    
  136   1          DBG_FLOW("\n\rCPU_PORRST_CNT:%02x",cnt);
  137   1      
  138   1      
  139   1          CNT_MASK = 0x09;
  140   1          cnt = CNT_STA;    
  141   1          DBG_FLOW("\n\rCPU_WDTRST_CNT:%02x",cnt);
  142   1            
  143   1      
  144   1          CNT_MASK = 0x0A;
  145   1          cnt = CNT_STA;    
  146   1          DBG_FLOW("\n\rCPU_EXTRST_CNT:%02x",cnt);
  147   1      
  148   1          CNT_MASK = 0x0B;
  149   1          cnt = CNT_STA;    
  150   1          DBG_FLOW("\n\rCPU_LCDRST_CNT:%02x",cnt);
  151   1      
  152   1          CNT_MASK = 0x0C;
  153   1          cnt = CNT_STA;    
  154   1          DBG_FLOW("\n\rCPU_ESDRST_CNT:%02x",cnt);
  155   1      
  156   1          CNT_MASK = 0x0D;
  157   1          cnt = CNT_STA;    
  158   1          DBG_FLOW("\n\rCPU_LVDRST_CNT:%02x",cnt);
  159   1          
  160   1          DBG_FLOW("\n\rinit system ok!");
  161   1          DelayMs(1000);
  162   1      
  163   1      #if 0
                   // REMAP test
                   DelayMs(1000);
                   REMAP = 0;
                   DelayMs(5);
               #endif    
  169   1      
  170   1      #if 0
                 while(1)
                 {
                   DBG_FLOW("\nLVD_STA:%d",LVD_STA);
                   DBG_FLOW("\nESD_STA:%d",ESD_STA);
                   DBG_FLOW("\nLVD_FLAG:%d",LVD_FLAG);
                   DBG_FLOW("\nESD_FLAG:%d",ESD_FLAG);
                   DBG_FLOW("\nLVD_VDDI_STA:%d",LVD_VDDI_STA);
                   DBG_FLOW("\nLVD_AVEE_STA:%d",LVD_AVEE_STA);
                   DBG_FLOW("\nLVD_AVDD_STA:%d\n",LVD_AVDD_STA);
                   DelayMs(1000);
                 }
               #endif    
  183   1      }
  184          
  185          /*******************************************************************************
  186          *   Name: main
  187          *  Brief:
  188          *  Input:
  189          * Output:
C251 COMPILER V5.54.0.0,  main                                                             22/06/17  18:27:19  PAGE 4   

  190          * Return:
  191          *******************************************************************************/
  192          void main(void)
  193          {
  194   1          unsigned char i=0;
  195   1      
  196   1       #if 0  
                   UINT8 buf[8]={0};
                   UINT16 crc=0;
                   for(i=0;i<8;i++)
                   {
                       buf[i]=0xa7;
                   }
                   
                   CRCCCITT(buf,6,&crc);
                   HOLD;
               #endif
  207   1          
  208   1          init_mcu();
  209   1      
  210   1      #if 1
  211   1          
  212   1          Test_UART();
  213   1          Test_SFR();
  214   1          Test_Dram();
  215   1          Test_Prom();
  216   1          Test_Aram();
  217   1          Test_SPI_Flash();
  218   1          Test_Spi0Reg();
  219   1          Test_XsiReg();
  220   1          Test_XbusReg();
  221   1          Test_AsmReg();
  222   1          Test_CalReg();
  223   1          Test_LcdReg();
  224   1          Test_AfeReg(); 
  225   1          Test_Afe_Ram();
  226   1          Test_DebugOut();    
  227   1      
  228   1          Test_LED();
  229   1          Test_I2C();
  230   1      
  231   1          Test_Reset();
  232   1          Test_WDT();
  233   1          Test_RTC();
  234   1          Test_Counter();
  235   1          
  236   1          Test_Timer();    
  237   1          Test_GPIO();
  238   1          Test_I2CWakeup();
  239   1          Test_Int0Wakeup();
  240   1          Test_int_nest();
  241   1          Test_Xsi();
  242   1          Test_Afe();
  243   1          Test_CAL();
  244   1      
  245   1          Test_romboot();
  246   1          Test_Xbus();
  247   1          Test_RomEcc();
  248   1          Test_SPI0();
  249   1          Test_DMA();
  250   1          Test_SPI0_Wakeup();
  251   1          Test_SOFT_RST();
  252   1      
  253   1          while (1)
  254   1          {
  255   2              DBG_FLOW("\nMODULE TEST");
C251 COMPILER V5.54.0.0,  main                                                             22/06/17  18:27:19  PAGE 5   

  256   2              DelayMs(2000);
  257   2          }
  258   1       #endif  
  259   1      }
  260          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       706     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       380     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
