C251 COMPILER V5.54.0.0,  Drv_XSI                                                          22/06/17  10:38:28  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Drv_XSI
OBJECT MODULE PLACED IN .\obj\Drv_XSI.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\driver\Drv_XSI.c XSMALL ROM(HUGE) OP
                    -TIMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task;..\
                    -..\src\include\config) STRING(FAR) DEBUG PRINT(.\list\Drv_XSI.lst) TABS(2) OBJECT(.\obj\Drv_XSI.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2014, FocalTech Systems (R)，All Rights Reserved.
    3          *
    4          * File Name: Drv_XSI.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2014-05-14
    9          *
   10          *  Abstract:
   11          *
   12          * Reference:
   13          *
   14          *   Version:
   15          *
   16          *******************************************************************************/
   17          #include "Drv_XSI.h"
   18          #include "FT8836_Reg.h"
   19          
   20          /*******************************************************************************
   21          * 1.Included header files
   22          *******************************************************************************/
   23          
   24          /*******************************************************************************
   25          * 2.Private constant and macro definitions using #define
   26          *******************************************************************************/
   27          
   28          /*******************************************************************************
   29          * 3.Private enumerations, structures and unions using typedef
   30          *******************************************************************************/
   31          ST_XSIRegisters * XRAM pXSI0Regs = (volatile ST_XSIRegisters *)XSI0_REG_BASE_ADDR;
   32          ST_XSIRegisters * XRAM pXSI1Regs = (volatile ST_XSIRegisters *)XSI1_REG_BASE_ADDR;
   33          
   34          /*******************************************************************************
   35          * 4.Static variables
   36          *******************************************************************************/
   37          
   38          /*******************************************************************************
   39          * 5.Global variable or extern global variabls/functions
   40          *******************************************************************************/
   41          
   42          /*******************************************************************************
   43          * 6.Static function prototypes
   44          *******************************************************************************/
   45          
   46          /*******************************************************************************
   47          *   Name: Drv_Xsi0Init
   48          *  Brief:
   49          *  Input:
   50          * Output:
   51          * Return:
   52          *******************************************************************************/
   53          void Drv_XsiInit()
   54          {
   55   1          AFECKEN  = 1;
   56   1          XSICKEN = 1;
   57   1      
C251 COMPILER V5.54.0.0,  Drv_XSI                                                          22/06/17  10:38:28  PAGE 2   

   58   1         XSI_SEL = 0; //CPU访问XSI
   59   1         while(XSI_SEL_STA);  //确保时钟切换完成
   60   1         
   61   1         // clk sel
   62   1         pXSI0Regs->Clksel = 3;
   63   1         pXSI1Regs->Clksel = 3;
   64   1      
   65   1      }
   66          
   67          /*******************************************************************************
   68          *   Name: Drv_XsiReadReg
   69          *  Brief:
   70          *  Input:
   71          * Output:
   72          * Return:
   73          *******************************************************************************/
   74          UINT16 Drv_XsiReadReg(ST_XSIRegisters *pXSIRegs, UINT16 usAddr, UINT8 flag)
   75          {
   76   1          UINT16 tmp;
   77   1          XSI_SEL = 0;
   78   1      
   79   1          //pXSIRegs->Stop = 1;
   80   1          //while (pXSIRegs->Stop);  
   81   1      
   82   1          pXSIRegs->Wdata  = (0<<XSI_WDATA_WR) + (flag<<XSI_WDATA_SEL) + usAddr;
   83   1          while (!pXSIRegs->Tx_int);
   84   1      
   85   1          pXSIRegs->Wdata = XSI_WDATA_DUMMY; // dummy
   86   1          while (!pXSIRegs->Tx_int);
   87   1      
   88   1          tmp = pXSIRegs->Rdata;
   89   1          pXSIRegs->Stop = 1;
   90   1          while (pXSIRegs->Stop);
   91   1          XSI_SEL = 1;
   92   1      
   93   1          return tmp;
   94   1      }
   95          
   96          /*******************************************************************************
   97          *   Name: Drv_XsiWriteReg
   98          *  Brief:
   99          *  Input:
  100          * Output:
  101          * Return:
  102          *******************************************************************************/
  103          void Drv_XsiWriteReg(ST_XSIRegisters *pXSIRegs, UINT16 usAddr, UINT16 usData,UINT8 flag)
  104          {
  105   1          XSI_SEL = 0;
  106   1        
  107   1          //pXSIRegs->Stop = 1;
  108   1          //while (pXSIRegs->Stop);    
  109   1      
  110   1          pXSIRegs->Wdata = (1<<XSI_WDATA_WR) + (flag<<XSI_WDATA_SEL) + usAddr;
  111   1          while (!pXSIRegs->Tx_int);
  112   1      
  113   1          pXSIRegs->Wdata = usData;
  114   1          while (!pXSIRegs->Tx_int);
  115   1          pXSIRegs->Stop = 1;
  116   1          while (pXSIRegs->Stop);
  117   1          XSI_SEL = 1;
  118   1      }
  119          
  120          /*******************************************************************************
  121          *   Name: Drv_XsiRead
  122          *  Brief:
  123          *  Input:
C251 COMPILER V5.54.0.0,  Drv_XSI                                                          22/06/17  10:38:28  PAGE 3   

  124          * Output:
  125          * Return:
  126          *******************************************************************************/
  127          void Drv_XsiRead(ST_XSIRegisters *pXSIRegs, UINT16 usAddr, UINT16 *pBuf, UINT16 len, UINT8 flag)
  128          {
  129   1          UINT8 i;
  130   1      
  131   1          XSI_SEL = 0;
  132   1          //pXSIRegs->Stop = 1;
  133   1          //while (pXSIRegs->Stop);      
  134   1      
  135   1          pXSIRegs->Wdata  = (0<<XSI_WDATA_WR) + (flag<<XSI_WDATA_SEL) + usAddr;
  136   1          while (!pXSIRegs->Tx_int);
  137   1      
  138   1          for (i = 0; i < len; i++)
  139   1          {
  140   2              pXSIRegs->Wdata = XSI_WDATA_DUMMY;   // dummy
  141   2              while (!pXSIRegs->Tx_int);
  142   2      
  143   2              *pBuf++ = pXSIRegs->Rdata;
  144   2          }
  145   1          
  146   1          pXSIRegs->Stop = 1;
  147   1          while (pXSIRegs->Stop);
  148   1          XSI_SEL = 1;
  149   1      }
  150          
  151          /*******************************************************************************
  152          *   Name: Drv_XsiWrite
  153          *  Brief:
  154          *  Input:
  155          * Output:
  156          * Return:
  157          *******************************************************************************/
  158          void Drv_XsiWrite(ST_XSIRegisters *pXSIRegs, UINT16 usAddr, UINT16 *pBuf, UINT16 len, UINT8 flag)
  159          {
  160   1        UINT16 XRAM i;
  161   1        
  162   1        XSI_SEL = 0;  // MCU used XSI
  163   1        while(XSI_SEL_STA);  //确保时钟切换完成
  164   1      //    pXSIRegs->Stop = 1;
  165   1      //    while (pXSIRegs->Stop);
  166   1        
  167   1        pXSIRegs->Wdata = (1<<XSI_WDATA_WR) + (flag<<XSI_WDATA_SEL) + usAddr;
  168   1        while (!pXSIRegs->Tx_int);
  169   1      
  170   1        for (i = 0; i < len; i++)
  171   1        {
  172   2          pXSIRegs->Wdata = *pBuf++;
  173   2          while (!pXSIRegs->Tx_int);
  174   2        }
  175   1      
  176   1        pXSIRegs->Stop = 1;
  177   1        while (pXSIRegs->Stop); 
  178   1        
  179   1        XSI_SEL = 1;  // AFE used XSI
  180   1        while(!XSI_SEL_STA);
  181   1      }
  182          
  183          
  184          #if _TEST_XSI_EN
               /*******************************************************************************
               *   Name: Test_Xsi()
               *  Brief:
               *  Input:
               * Output:
C251 COMPILER V5.54.0.0,  Drv_XSI                                                          22/06/17  10:38:28  PAGE 4   

               * Return:
               *******************************************************************************/
               void Test_Xsi()
               {
                   UINT8 i,j;
                   UINT8 len;
                   UINT16 k = 0;
                   UINT16 XRAM Buf1[200];
                   UINT16 XRAM Buf2[200];
                   UINT16 XRAM Buf3[200];
               
                   DBG_MODE("\n\rXSI test is start");
                   Drv_XsiInit();
                   len = 200;
                   for (i = 0; i < len; i++)
                   {
                       Buf3[i] = 5 + i;
                   }
                   
                   while (1)
                   {
                       for (j = 0; j < 200; j++)
                       {
                           for (i = 0; i < len; i++)
                          {
                               Buf1[i] = i + Buf3[j];
                          }
                           Drv_XsiWrite(pXSI0Regs,256,Buf1,len,XSI_S_REG);
                           Drv_XsiRead(pXSI0Regs,256,Buf2,len,XSI_S_REG);
                           for (i = 0; i < len; i++)
                           {
                               if (Buf1[i] != Buf2[i])                
                               {
                                   DBG_ERROR("\n\rBuf1[%02d]: %04x,Buf2[%02d]: %04x",i,Buf1[i],i,Buf2[i]);
                                   break;
                               }
                           }
                           DelayMs(10);
                       }
                       k++;
                       DBG_XSI("\n\rCounter: %06d",k);
                   }
                   DBG_MODE("\n\rXSI test is end");
               }
               #endif
  235          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       344     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8         14
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        16     ------
End of Module Information.

C251 COMPILER V5.54.0.0,  Drv_XSI                                                          22/06/17  10:38:28  PAGE 5   


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
