C251 COMPILER V5.54.0.0,  Drv_mcu                                                          19/06/17  20:03:25  PAGE 1   


C251 COMPILER V5.54.0.0, COMPILATION OF MODULE Drv_mcu
OBJECT MODULE PLACED IN .\obj\Drv_mcu.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C251\BIN\C251.EXE ..\..\src\source\driver\Drv_mcu.c XSMALL ROM(HUGE) OP
                    -TIMIZE(9,SPEED) BROWSE INCDIR(..\..\src\include;..\..\src\include\Debug;..\..\src\include\Drv;..\..\src\include\task;..\
                    -..\src\include\config) STRING(FAR) DEBUG PRINT(.\list\Drv_mcu.lst) TABS(2) OBJECT(.\obj\Drv_mcu.obj) 

stmt  level    source

    1          /*******************************************************************************
    2          * Copyright (C) 2012-2013, FocalTech Systems (R)£¬All Rights Reserved.
    3          *
    4          * File Name: Drv_mcu.c
    5          *
    6          *    Author: xinkunpeng
    7          *
    8          *   Created: 2014-04-24
    9          *
   10          *  Abstract:
   11          *
   12          * Reference: Transplant from FT5412 by linjianjun
   13          *
   14          *   Version: 0.2
   15          *
   16          *******************************************************************************/
   17          
   18          /*******************************************************************************
   19          * 1.Included header files
   20          *******************************************************************************/
   21          #include <intrins.h>
   22          #include "Drv_mcu.h"
   23          #include "uart.h"
   24          
   25          /*******************************************************************************
   26          * 2.Private constant and macro definitions using #define
   27          *******************************************************************************/
   28          
   29          /*******************************************************************************
   30          * 3.Private enumerations, structures and unions using typedef
   31          *******************************************************************************/
   32          
   33          /*******************************************************************************
   34          * 4.Static variables
   35          *******************************************************************************/
   36          
   37          /*******************************************************************************
   38          * 5.Global variable or extern global variabls/functions
   39          *******************************************************************************/
   40          UINT8 XRAM g_ucbuf[16];
   41          
   42          /*******************************************************************************
   43          * 6.Static function prototypes
   44          *******************************************************************************/
   45          
   46          /*******************************************************************************
   47          *   Name: DrvSysClkInit
   48          *  Brief: Initialize system clock based on ucflag
   49          *  Input: UINT8 ucflag
   50          * Output: None
   51          * Return: None
   52          *******************************************************************************/
   53          void DrvSysClkInit(UINT8 ucDiv)
   54          {
   55   1          if (ucDiv < 4)
   56   1          {
   57   2              CGUCON4 = ucDiv;
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          19/06/17  20:03:25  PAGE 2   

   58   2          }
   59   1              
   60   1          CLKEN_500K = 1;      // 500kÊ±ÖÓ¿ªÆô 
   61   1      }
   62          
   63          /*******************************************************************************
   64          *   Name: DrvIOInit
   65          *  Brief:
   66          *  Input:
   67          * Output: None
   68          * Return: None
   69          *******************************************************************************/
   70          void DrvIOInit(void)
   71          {
   72   1          g_ucbuf[0]  = CGUCON0;
   73   1          g_ucbuf[1]  = CGUCON1;
   74   1          g_ucbuf[2]  = CGUCON2;
   75   1          g_ucbuf[3]  = CGUCON3;
   76   1          g_ucbuf[4]  = CGUCON4;
   77   1          g_ucbuf[5]  = CGUCON5;
   78   1          g_ucbuf[6]  = CGUCON6;
   79   1          g_ucbuf[7]  = CGUCON7;
   80   1          g_ucbuf[8]  = CGUCON8;
   81   1          g_ucbuf[9]  = SFTRST;
   82   1          g_ucbuf[10]  = POR_STA;
   83   1          g_ucbuf[11] = RST_STA;
   84   1          g_ucbuf[12] = ANACON;
   85   1      
   86   1          POR_STA = 0x00;
   87   1          RST_STA = 0x66;
   88   1      
   89   1          SYSCKEN = 1;
   90   1          P0SEL = 0xff;
   91   1          P1SEL = 0xff;
   92   1          
   93   1          P1MOD = 0x00;
   94   1          
   95   1          P0MOD = BITn(1) + BITn(0);      //P0_0 SCL;P0_1 SDA
   96   1      
   97   1          P0DIR = 0xff;
   98   1          P1DIR = 0xff;
   99   1      }
  100          
  101          /*******************************************************************************
  102          *   Name: DelayUs
  103          *  Brief:
  104          *  Input:
  105          * Output: None
  106          * Return: None
  107          *******************************************************************************/
  108          void DelayUs(UINT8 ucDlyCnt)
  109          {
  110   1      #if _FOR_RD
                 return;
               #else
  113   1          while (ucDlyCnt--)
  114   1          {
  115   2              _nop_();
  116   2              _nop_();
  117   2              _nop_();
  118   2              _nop_();
  119   2      
  120   2              _nop_();
  121   2              _nop_();
  122   2              _nop_();
  123   2              _nop_();
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          19/06/17  20:03:25  PAGE 3   

  124   2      
  125   2              _nop_();
  126   2              _nop_();
  127   2              _nop_();
  128   2              _nop_();
  129   2      
  130   2              _nop_();
  131   2              _nop_();
  132   2      
  133   2              _nop_();
  134   2              _nop_();
  135   2              _nop_();
  136   2              _nop_();
  137   2      
  138   2              _nop_();
  139   2              _nop_(); 
  140   2              _nop_();
  141   2              _nop_();
  142   2              
  143   2              _nop_();
  144   2              _nop_();
  145   2              _nop_();
  146   2              _nop_();
  147   2      
  148   2              _nop_();
  149   2              _nop_();
  150   2              _nop_();
  151   2              _nop_();
  152   2      
  153   2              _nop_();
  154   2              _nop_();         
  155   2              _nop_();
  156   2              _nop_(); 
  157   2              
  158   2            
  159   2          }
  160   1      #endif  
  161   1      }
  162          
  163          /*******************************************************************************
  164          *   Name: DelayMs
  165          *  Brief:
  166          *  Input:
  167          * Output: None
  168          * Return: None
  169          *******************************************************************************/
  170          void DelayMs(UINT16 ucDlyCnt)
  171          {
  172   1          while (ucDlyCnt--)
  173   1          {
  174   2              DelayUs(250);
  175   2              DelayUs(250);
  176   2              DelayUs(250);
  177   2              DelayUs(250);
  178   2          }
  179   1      }
  180          
  181          /*******************************************************************************
  182          *   Name: DrvSysPowerMode
  183          *  Brief: Select system power saving mode
  184          *  Input: None
  185          * Output: None
  186          * Return: None
  187          *******************************************************************************/
  188          void DrvSysPowerMode(UINT8 pmode)
  189          {
C251 COMPILER V5.54.0.0,  Drv_mcu                                                          19/06/17  20:03:25  PAGE 4   

  190   1          /* IDLE mode */
  191   1          if (pmode == 0)
  192   1          {  
  193   2              CORE_STOP = 0;
  194   2              CORE_IDLE = 1;
  195   2              EA = 1;
  196   2          }
  197   1          /* Stop mode */
  198   1          if (pmode == 1)
  199   1          {
  200   2              CLK_WP = 1;
  201   2              STANDBY = 0;
  202   2              CORE_STOP = 1;
  203   2              EA = 1;
  204   2          }
  205   1      
  206   1          /* Standby mode */
  207   1          if (pmode == 2)
  208   1          {
  209   2              CLK_WP = 1;
  210   2              STANDBY = 1;
  211   2              CORE_STOP = 1;
  212   2              EA = 1;
  213   2          }
  214   1      
  215   1          _nop_();
  216   1          _nop_();
  217   1          _nop_();
  218   1          _nop_();
  219   1      }
  220          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       237     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        16     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
